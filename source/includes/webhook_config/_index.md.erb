# Webhook config

A webhook config should be provided following the format below.
We will fetch this config each time a new trigger is set up.
The JSON to the right is an example of the expected response.

To use the same config with the same set of fields for all clients, you can save a static config on the [Partner resource](#partners).
In that case we won't get the config using this endpoint.

```http
GET ${BASE_URL}/config HTTP/1.1
Authorization: Bearer xxx-provider-key
```

> Expected response

```json
{
  "config": {
    "fields": [
      {
        "id": "type",
        "label": "Test",
        "placeholder": "Select test",
        "type": "select",
        "options": [
          { "id": 1, "label": "Algorithm test" },
          { "id": 2, "label": "Data structure test" },
          { "id": 3, "label": "Javascript programming test" }
        ]
      },
      {
        "id": "threshold",
        "label": "Threshold",
        "placeholder": "Minimum score to pass",
        "type": "number",
        "step": 5,
        "min": 0,
        "max": 100
      }
    ]
  }
}
```

### HTTP Request
`GET ${BASE_URL}/config`

The request is authenticated with the client-specific “provider key” in the Authorization Bearer header.

### Expected response

Attribute        | Type    | Description
-----------------|---------|------------
config           | object  | Top-level object
fields           | array   | List of possible fields (see below)

### Field objects

Attribute        | Type    | Description
-----------------|---------|------------
id               | string  | Identifier for this field, will be sent in webhook
label            | string  | Human readable label
placeholder      | string  | Form placeholder
type             | string  | Type of form element (see below)

### Supported field types

Field objects follow the HTML form standard in regards to types, possible options, labels and placeholders.
For example, __disabled__ may be provided for the __"text"__ type, __step__, __min__ and __max__ may be provided for the __"number"__ type and an __options__ array
with __id__/__label__ may be provided for the __"select"__ type.

All of the supported field types:

- checkbox
- color
- date
- datetime
- datetime-local
- email
- file
- hidden
- month
- number
- password
- radio
- range
- reset
- search
- select
- tel
- text
- url
- week
