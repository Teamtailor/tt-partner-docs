# Webhooks

When a trigger is executed in Teamtailor, the webhook JSON object is sent to your configurable endpoint.

<aside class="notice">
  Read more about <a href="http://support.teamtailor.com/applicant-tracking/triggers" target="_blank">triggers in our support center</a>.
</aside>

```http
POST ${BASE_URL}/webhook HTTP/1.1
Authorization: Bearer xxx-provider-key
```

> Expected payload

```json
{
  "partner-event": {
    "id": "f3d7e8e2-da33-4c10-ae5f-0e7f4d46f6d7",
    "webhook-data": {
      "test": "1",
      "threshold": "75"
    },
    "partner-result": {
      "id": "1a6d5a41-f0dd-4226-9d3b-186392bea484",
      "status": "sending",
      "update-url": "https://api.teamtailor.com/partner/v1/partner-results/1a6d5a41-f0dd-4226-9d3b-186392bea484"
    },
    "candidate": {
      "id": 54321,
      "uuid": "092fba68-496c-4d44-9821-3496be2631ea",
      "first-name": "Juston",
      "last-name": "Becker",
      "email": "applicant100@example.com",
      "phone": "+4670432121",
      "tags": ["developer", "ruby"],
      "department": "Product development",
      "role": "Designer",
      "job-offers": [
        {
          "id": "8734sg4d-6421-8954-934b-024b13412b7b",
          "created_at": "2024-11-13T15:38:02.074+01:00",
          "salary": {
            "amount": "2000",
            "currency": "EUR",
            "salary_time_unit": "yearly"
          },
          "status": "accepted",
          "response": "I'm glad to accept your offer",
          "message": "Offer Message",
          "name": "Offer Name",
          "answered_at": "2024-11-18T12:39:19.856+01:00"
        }
      ],
      "referrals": [
        {
          "id": 12345,
          "name": "John Doe",
          "email": "john@example.com"
        }
      ],
      "onboardings": [
        {
          "id": 177,
          "status": "active",
          "progress": 33,
          "created_at": "2025-01-09T16:45:31.292+01:00",
          "start_date": "2025-01-15",
          "department": "Marketing",
          "role": null,
          "job": "Marketing Manager",
          "user": "candidate@example.com"
        }
      ],
      "job": {
        "id": 12345,
        "title": "Full-stack web developer",
        "stage-id": 1,
        "stage": "After Interview",
        "tags": ["ruby", "javascript"],
        "trigger-id": 1,
        "custom-fields": [
          {
            "is-remote": {
              "value": true,
              "type": "boolean"
            }
          }
        ],
        "status": {
          "rejected": false
        },
        "triggered-by": {
          "id": 31,
          "email": "email22@example.com",
          "name": "Champlin19"
        }
      },
      "recruiter": {
        "name": "Edison Kuhn",
        "email": "email1@example.com",
        "phone": "+461234567"
      },
      "locations": [
        {
          "name": "Stockholm",
          "address": "Åsögatan 18, 126 41, Stockholm"
        }
      ],
      "questions": [
        {
          "question": "What are your preferred environments?",
          "answer": ["Ruby on Rails", "Ember.js"]
        }
      ],
      "custom-fields": [
        {
          "has-driver-license": {
            "value": true,
            "type": "boolean"
          }
        },
        {
          "social-security-number": {
            "value": "123456-7890",
            "type": "text"
          }
        }
      ]
    },
    "company": {
      "uuid": "vAXspNm0J2Y",
      "name": "Teamtailor",
      "url": "https://career.teamtailor.com",
      "logotype": "https://res.cloudinary.com/teamtailor/image/upload/c_limit,f_auto,h_100,q_auto,w_100,dpr_2.0/v1433344861/b2urpbafegvjzexula0n"
    }
  }
}
```

### HTTP Request
`POST ${BASE_URL}/webhook`

### Webhook JSON object

The JSON object sent to you contains the candidate data, the selected trigger's "webhook data" and a reference to the [partner result](#partner-results) object, in case an assessment is requested.

The request is authenticated with the client-specific "provider key" in the Authorization Bearer header.

Attribute               | Value
-------------------     | -------
id                      | Unique identifier of this event.
webhook-data            | The picked options from your [Webhook config](#webhook-config), for example test ID and threshold value.
partner-result          | The result presented to the customer. Update scores, status etc using the [Partner Results resource](#partner-results).
partner-result.update-url | The URL used to update a [Partner Results resource](#partner-results)
company                 | Company data: `uuid`, `name`, `url` (to career site), `logotype` (URL to file).
candidate               | Candidate data.
candidate.job           | Candidate job data: `id`, `title`, `stage`, `tags`, `custom-fields`. When run by trigger also includes: `stage-id`, `trigger-id` and `triggered-by`.
candidate.recruiter     | Job recruiter data: `name`, `email`, `phone`.
candidate.locations     | Candidate locations, list with: `name`, `address`.
candidate.questions     | Candidate answers to questions, list with: `question`, `answer`. Supported types: Text, Choice (list), Boolean (`yes`/`no`), Range (eg, "10 years"), File (url to file, valid for 1 hour)
candidate.custom-fields | Candidate custom fields, list with: `type`, `value`. Supported types: `text`, `date`, `boolean`, `phone`, `number`, `email`, `url`
candidate.job-offers    | Candidate job offers, list with: `id`, `created_at`, `salary` (contains `amount`, `currency`, `salary_time_unit`), `status`, `response`, `message`, `name`, `answered_at`. **Note:** Job offers are only available to partners with "Include job offers" option enabled.
candidate.referrals     | Candidate referrals, list with `id`, `name`, `email`
candidate.onboardings   | Candidate onboardings, list with: `id`, `status`, `progress`, `created_at`, `start_date`, `departament`, `role`, `job`, `user`. <br> **Note:** It will be only included if you use the Onboarding feature.

### Error handling

We expect your webhook to return a HTTP 2xx status code. Other responses will indicate to us that you didn't successfully receive the webhook. In this case we will attempt to deliver the webhook for three times or until we get a HTTP 2xx status code. We will notify you by email on the first retry failure. To render an error message in the partner result you need to return a plain string with a status code >=400.
